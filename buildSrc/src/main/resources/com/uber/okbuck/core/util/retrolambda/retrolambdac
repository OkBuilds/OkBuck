#!/bin/bash

# Run javac first
javac "$@"

# Store javac exit code
TRAPPED_EXIT_CODE=$?
if [[ $TRAPPED_EXIT_CODE == 0 ]]; then # If javac succeeded
    while [[ $# -gt 1 ]] # Intercept javac args
    do
    key="$1"
    case $key in
        -d)
        OUTPUT_DIR="$2"
        shift
        ;;
        -cp|-classpath)
        CLASSPATH="$2"
        shift
        ;;
        -bootclasspath)
        BOOT_CLASSPATH="$2"
        shift
        ;;
        *)
        ;;
    esac
    shift
    done
    # Skip retrolambda completely if there are no files to be processed
    if [[ ! -z "$OUTPUT_DIR" ]]; then
      # Get script directory
      prog="$0"
      while [ -h "${prog}" ]; do
          newProg=`/bin/ls -ld "${prog}"`
          newProg=`expr "${newProg}" : ".* -> \(.*\)$"`
          if expr "x${newProg}" : 'x/' >/dev/null; then
              prog="${newProg}"
          else
              progdir=`dirname "${prog}"`
              prog="${progdir}/${newProg}"
          fi
      done
      DIR=`dirname $prog`
      # Run retrolambda on the output classes
      java -Dretrolambda.inputDir="${OUTPUT_DIR}" \
      -Dretrolambda.classpath="${BOOT_CLASSPATH}":"${CLASSPATH}":"${OUTPUT_DIR}" \
      template-retrolambda-jvm-args -jar "${DIR}"/template-retrolambda-jar
    fi
else
    exit $TRAPPED_EXIT_CODE # Exit with javac exit code if failure
fi
