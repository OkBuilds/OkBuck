
def base_name(file_name):
    parts = file_name.split('__')
    return '{}__{}'.format(parts[0], parts[1])


jars = {}
aars = {}
sources = {}


for jar in glob(['*.jar']):
  b_name = base_name(jar)
  if jar.endswith('-sources.jar'):
    sources[b_name] = jar
  else:
    jars[b_name] = jar


for aar in glob(['*.aar']):
  b_name = base_name(aar)
  aars[b_name] = aar


for b_name, jar in jars.iteritems():
  prebuilt_jar(
    name = b_name,
    binary_jar = jar,
    source_jar = sources.get(b_name) or None,
    visibility = ['PUBLIC'],
  )


for b_name, aar in aars.iteritems():
  android_prebuilt_aar(
    name = b_name,
    aar = aar,
    source_jar = sources.get(b_name) or None,
    visibility = ['PUBLIC'],
  )
