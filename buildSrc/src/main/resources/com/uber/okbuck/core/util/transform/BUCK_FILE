jars = []
configs = []

for entry in glob(['*.*']):
  if entry.endswith('jar'):
    jars.append(entry)
  else:
    configs.append(entry)

for config in configs:
  export_file(
    name = config,
    visibility = ['PUBLIC'],
  )

for jar in jars:
  prebuilt_jar(
    name = jar,
    binary_jar = jar,
    visibility = ['PUBLIC'],
  )

java_binary(
  name='okbuck_transform',
  deps=map(lambda x: ":" + x, jars),
  blacklist=[
    'META-INF',
  ],
  visibility = ['PUBLIC'],
)
