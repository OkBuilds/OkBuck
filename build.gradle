buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.1'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        classpath 'me.tatarka:gradle-retrolambda:3.3.0'
        classpath 'com.jakewharton:butterknife-gradle-plugin:8.4.0'
        classpath 'com.squareup.sqldelight:gradle-plugin:0.4.4'
    }
}

allprojects {
    repositories {
        jcenter()
    }
}

ext {
    androidCompileSdkVersion = 24
    androidBuildToolsVersion = '24.0.2'
    androidMinSdkVersion = 15
    androidTargetSdkVersion = 24
    androidSupportSdkVersion = '24.1.1'
}

// Workaround to make gradle source tasks in buck run on travis
if (project.file("buildSrc").exists()) {
    apply plugin: 'com.uber.okbuck'

    okbuck {
        buildToolVersion rootProject.ext.androidBuildToolsVersion
        target "android-${rootProject.ext.androidCompileSdkVersion}"

        primaryDexPatterns = [
                'app': [
                        '^com/uber/okbuck/example/AppShell^',
                        '^com/uber/okbuck/example/BuildConfig^',
                        '^android/support/multidex/',
                        '^com/facebook/buck/android/support/exopackage/',
                        '^com/github/promeg/xlog_android/lib/XLogConfig^',
                        '^com/squareup/leakcanary/LeakCanary^',
                        '^com/uber/okbuck/example/common/Calc^',
                        '^com/uber/okbuck/example/common/BuildConfig^',
                ]
        ]
        exopackage = [
                'appDevDebug': true
        ]
        appLibDependencies = [
                'appProd': [
                        'buck-android-support',
                        'com.android.support:multidex',
                        'libraries/javalibrary:main',
                        'libraries/common:paidRelease',
                ],
                'appDev' : [
                        'buck-android-support',
                        'com.android.support:multidex',
                        'libraries/javalibrary:main',
                        'libraries/common:freeDebug',
                ],
                'appDemo': [
                        'buck-android-support',
                        'com.android.support:multidex',
                        'libraries/javalibrary:main',
                        'libraries/common:paidRelease',
                ]
        ]
        buckProjects = project.subprojects.findAll { it.name != "plugin" }

        intellij {
            sources = true
        }

        test {
            espresso = true
            robolectric = true
        }

        gradleGen {
            options = ["--offline", "-Dorg.gradle.configureondemand=true", "-Dorg.gradle.parallel=true"]
        }
    }

    afterEvaluate {
        tasks.getByName("okbuck").doLast {
            "zip -d .okbuck/cache/org.hamcrest.hamcrest-core-1.3.jar LICENSE.txt".execute()
            "zip -d .okbuck/cache/org.hamcrest.hamcrest-library-1.3.jar LICENSE.txt".execute()
            "zip -d .okbuck/cache/org.hamcrest.hamcrest-integration-1.3.jar LICENSE.txt".execute()
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
